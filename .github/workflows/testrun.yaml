name: Build and Run with Docker Compose

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:

jobs:
  build:
    environment: Supabase
    name: Build and Run with Docker Compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Clean up Docker environment
        run: docker compose down -v --remove-orphans
          
      - name: Check if all DB secrets are set
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USERNAME: ${{ vars.DB_USERNAME }}
        run: |
          missing=""
          if [ -z "$DB_URL" ]; then
            echo "DB_URL is not set"
            missing="yes"
          fi
          if [ -z "$DB_PASSWORD" ]; then
            echo "DB_PASSWORD is not set"
            missing="yes"
          fi
          if [ -z "$DB_USERNAME" ]; then
            echo "DB_USERNAME is not set"
            missing="yes"
          fi
          if [ -n "$missing" ]; then
            echo "One or more secrets are missing"
            exit 1
          else
            echo "All DB secrets are set"
          fi
      - name: Run Flyway migrations
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn flyway:migrate

      - name: Build application package
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn clean package

      - name: Build and run all services with Docker Compose
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: docker compose up -d --build