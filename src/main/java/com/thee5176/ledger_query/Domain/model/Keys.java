/*
 * This file is generated by jOOQ.
 */
package com.thee5176.ledger_query.Domain.model;


import com.thee5176.ledger_query.Domain.model.tables.CodeOfAccount;
import com.thee5176.ledger_query.Domain.model.tables.FlywaySchemaHistory;
import com.thee5176.ledger_query.Domain.model.tables.LedgerItems;
import com.thee5176.ledger_query.Domain.model.tables.Ledgers;
import com.thee5176.ledger_query.Domain.model.tables.records.CodeOfAccountRecord;
import com.thee5176.ledger_query.Domain.model.tables.records.FlywaySchemaHistoryRecord;
import com.thee5176.ledger_query.Domain.model.tables.records.LedgerItemsRecord;
import com.thee5176.ledger_query.Domain.model.tables.records.LedgersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CodeOfAccountRecord> CODE_OF_ACCOUNT_PKEY = Internal.createUniqueKey(CodeOfAccount.CODE_OF_ACCOUNT, DSL.name("code_of_account_pkey"), new TableField[] { CodeOfAccount.CODE_OF_ACCOUNT.CODE }, true);
    public static final UniqueKey<CodeOfAccountRecord> CODE_OF_ACCOUNT_TITLE_KEY = Internal.createUniqueKey(CodeOfAccount.CODE_OF_ACCOUNT, DSL.name("code_of_account_title_key"), new TableField[] { CodeOfAccount.CODE_OF_ACCOUNT.TITLE }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<LedgerItemsRecord> ENTRIES_PKEY = Internal.createUniqueKey(LedgerItems.LEDGER_ITEMS, DSL.name("entries_pkey"), new TableField[] { LedgerItems.LEDGER_ITEMS.ID }, true);
    public static final UniqueKey<LedgersRecord> TRANSACTIONS_PKEY = Internal.createUniqueKey(Ledgers.LEDGERS, DSL.name("transactions_pkey"), new TableField[] { Ledgers.LEDGERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LedgerItemsRecord, CodeOfAccountRecord> LEDGER_ITEMS__ENTRIES_COA_FKEY = Internal.createForeignKey(LedgerItems.LEDGER_ITEMS, DSL.name("entries_coa_fkey"), new TableField[] { LedgerItems.LEDGER_ITEMS.COA }, Keys.CODE_OF_ACCOUNT_PKEY, new TableField[] { CodeOfAccount.CODE_OF_ACCOUNT.CODE }, true, ForeignKeyRule.SET_NULL, ForeignKeyRule.NO_ACTION);
    public static final ForeignKey<LedgerItemsRecord, LedgersRecord> LEDGER_ITEMS__ENTRIES_TRANSACTION_ID_FKEY = Internal.createForeignKey(LedgerItems.LEDGER_ITEMS, DSL.name("entries_transaction_id_fkey"), new TableField[] { LedgerItems.LEDGER_ITEMS.LEDGER_ID }, Keys.TRANSACTIONS_PKEY, new TableField[] { Ledgers.LEDGERS.ID }, true, ForeignKeyRule.CASCADE, ForeignKeyRule.NO_ACTION);
}
